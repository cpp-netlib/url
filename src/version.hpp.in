// Copyright 2018-20 Glyn Matthews.
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef SKYR_VERSION_HPP
#define SKYR_VERSION_HPP

/// \file skyr/version.hpp

#include <string_view>
#include <skyr/config.hpp>

#define SKYR_VERSION_MAJOR @skyr-url_VERSION_MAJOR@
#define SKYR_VERSION_MINOR @skyr-url_VERSION_MINOR@
#define SKYR_VERSION_PATCH @skyr-url_VERSION_PATCH@

#define SKYR_VERSION_STRING \
  SKYR_PREPROCESSOR_TO_STRING(SKYR_VERSION_MAJOR) "." \
  SKYR_PREPROCESSOR_TO_STRING(SKYR_VERSION_MINOR)

#define SKYR_RELEASE_STRING \
  SKYR_PREPROCESSOR_TO_STRING(SKYR_VERSION_MAJOR) "." \
  SKYR_PREPROCESSOR_TO_STRING(SKYR_VERSION_MINOR) "." \
  SKYR_PREPROCESSOR_TO_STRING(SKYR_VERSION_PATCH)

namespace skyr {
struct skyr_version {
  int major;
  int minor;
};

struct skyr_release {
  int major;
  int minor;
  int patch;
};

/// Gets the library version
///
/// \code
/// auto [major, minor] = skyr::version();
/// \endcode
/// \returns The major and minor version
[[maybe_unused]] static constexpr auto version() noexcept -> skyr_version {
  return {SKYR_VERSION_MAJOR, SKYR_VERSION_MINOR};
}

/// Gets the library release
///
/// \code
/// auto [major, minor, patch] = skyr::release();
/// \endcode
/// \returns The major, minor and patch
[[maybe_unused]] static constexpr auto release() noexcept -> skyr_release {
  return {SKYR_VERSION_MAJOR, SKYR_VERSION_MINOR, SKYR_VERSION_PATCH};
}

/// \returns The version as a string in the form MAJOR.MINOR
[[maybe_unused]] static constexpr auto version_string() noexcept -> std::string_view {
  return SKYR_VERSION_STRING;
}

/// \returns The version as a string in the form MAJOR.MINOR.PATCH
[[maybe_unused]] static constexpr auto release_string() noexcept -> std::string_view {
  return SKYR_RELEASE_STRING;
}
}  // namespace skyr

#endif // SKYR_VERSION_HPP
