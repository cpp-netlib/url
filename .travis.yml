sudo: false

language: c++

dist: bionic

env:
  global: DEPS_DIR="${TRAVIS_BUILD_DIR}/deps_"

matrix:
  include:
    - os: linux
      compiler: gcc
      addons: &gcc8
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-8']
      env: [COMPILER='g++-8', VCPKG_TRIPLET='x64-linux', BUILD_WITH_LLVM_LIBCXX='OFF']

    - os: linux
      compiler: gcc
      addons: &gcc9
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-9']
      env: [COMPILER='g++-9', VCPKG_TRIPLET='x64-linux', BUILD_WITH_LLVM_LIBCXX='OFF']

    - os: linux
      compiler: clang
      addons: &clang7
        apt:
          sources: ['llvm-toolchain-bionic-7']
          packages: ['clang++-7', 'libc++-7-dev', 'libc++abi-7-dev']
      env: [COMPILER='clang++-7', VCPKG_TRIPLET='x64-linux', BUILD_WITH_LLVM_LIBCXX='ON']

    - os: linux
      compiler: clang
      addons: &clang8
        apt:
          sources: ['llvm-toolchain-bionic-8']
          packages: ['clang++-8', 'libc++-8-dev', 'libc++abi-8-dev']
      env: [COMPILER='clang++-8', VCPKG_TRIPLET='x64-linux', BUILD_WITH_LLVM_LIBCXX='ON']

    - os: linux
      compiler: clang
      addons: &clang9
        apt:
          sources: ['llvm-toolchain-bionic-9']
          packages: ['clang++-9', 'libc++-9-dev', 'libc++abi-9-dev']
      env: [COMPILER='clang++-9', VCPKG_TRIPLET='x64-linux', BUILD_WITH_LLVM_LIBCXX='ON']

#    # 3/ OSX Clang Builds
#    - os: osx
#      osx_image: xcode10
#      compiler: clang
#      env: [COMPILER='clang', VCPKG_TRIPLET='x64-osx']

before_install:
  - mkdir -p ${DEPS_DIR}
  - pushd ${DEPS_DIR}
  - echo ${TRAVIS_OS_NAME}
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://github.com/Kitware/CMake/releases/download/v3.14.0/cmake-3.14.0-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    elif [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      which cmake || brew install cmake
    fi
  - popd
  - |
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      brew install gcc
      brew upgrade gcc
      export CXX=`which g++`
    else
      export CXX=${COMPILER}
    fi
  - echo ${CXX}
  - ${CXX} --version

install:
  - mkdir -p ${DEPS_DIR}/vcpkg
  - pushd ${DEPS_DIR}/vcpkg
  - git init
  - git remote add origin https://github.com/Microsoft/vcpkg.git
  - git fetch origin master
  - git checkout -b master origin/master
  - ${CXX} --version
  - export
  - ./bootstrap-vcpkg.sh
  - ./vcpkg install tl-expected catch2 nlohmann-json
  - popd

cache:
  directories:
    - ${DEPS_DIR}/vcpkg/installed

before_script:
  - export CXX=${COMPILER}

script:
    - mkdir _build
    - pushd _build
    - cmake -DSkyr_BUILD_TESTS=ON
            -DSkyr_BUILD_DOCS=OFF
            -DSkyr_BUILD_EXAMPLES=OFF
            -DSkyr_BUILD_WITH_LLVM_LIBCXX=${BUILD_WITH_LLVM_LIBCXX}
            -DCMAKE_TOOLCHAIN_FILE=${DEPS_DIR}/vcpkg/scripts/buildsystems/vcpkg.cmake
            ..
    - make -j 8
    - make test
    - popd

after_failure:
    - cat _build/Testing/Temporary/LastTest.log
