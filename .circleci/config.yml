version: 2

jobs:
  build:
    docker:
      - image: "debian:buster"
    steps:
      - run:
          name: Installing Dependencies
          command: |
            apt-get update
            apt-get install -y sudo git wget ninja-build curl unzip tar
            rm -rf /var/lib/apt/lists/*
            echo 'export CMAKE_BUILD_PARALLEL_LEVEL=4' >> $BASH_ENV
      - run:
          name: Installing GCC
          command: |
            apt-get update && apt-get install -y gcc g++ gcc-8 g++-8
            echo 'export CC=/usr/bin/gcc-8' >> $BASH_ENV
            echo 'export CXX=/usr/bin/g++-8' >> $BASH_ENV
      - run:
          name: Install CMAKE
          command: |
            cd /tmp
            wget "https://github.com/Kitware/CMake/releases/download/v3.15.2/cmake-3.15.2-Linux-x86_64.tar.gz"
            tar -xzf cmake-3.15.2-Linux-x86_64.tar.gz
            echo 'export PATH="/tmp/cmake-3.15.2-Linux-x86_64/bin:$PATH"' >> $BASH_ENV
      - run:
          name: Installing VCPKG
          command: |
            cd /tmp
            mkdir -p vcpkg
            pushd vcpkg
            git init
            git remote add origin https://github.com/Microsoft/vcpkg.git
            git fetch origin master
            git checkout -b master origin/master
            ./bootstrap-vcpkg.sh
            ./vcpkg install catch2 tl-expected
            popd
      - checkout
      - run:
          name: Creating Build Files
          command: |
            mkdir _build
            pushd _build
            cmake -G Ninja -DSkyr_BUILD_TESTS=ON -DSkyr_BUILD_DOCS=OFF -DSkyr_BUILD_EXAMPLES=OFF -DCMAKE_TOOLCHAIN_FILE=/tmp/vcpkg/scripts/buildsystems/vcpkg.cmake ..
            popd
      - run:
          name: Creating Binary Files
          command: |
            pushd _build
            ninja
            popd
      - run:
          name: Running All Unit Tests
          command: |
            pushd _build
            ctest
            popd
